<!doctype html>
<html style="margin: 0; width: 100%; height:100%;">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <link rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"></script>
  </head>
<<<<<<< HEAD
  <body onload="draw()" style="width: 100%; height:100%;">
    <div id="content" class="container">
      <div class="row">
        <div class="col-10" style="text-align:center;">
          <h1>Exercice Photomaton</h1>
        </div>
      </div>
      <div class="row">
        <div class="col-10" style="text-align: center;">
          <h1>Mendez, Mudespacher, Schito</h1>
        </div>
      </div>
      <div class="row">
        <div class="col-10">
          <div class="form-group">
            <input style="width:100%;" type="file" accept="image/*"
              id="imagePicker" class="form-control-file">
          </div>
=======
  <body onload="Setup()">
     <div id="content">
        <div>
          <input type="file" accept="image/*" id="imagePicker">
        </div>
        <div id="image">
          <canvas id="canvas" width="256" height="256" style="display:none"></canvas>
          <canvas id="newcanvas" width="256" height="256"></canvas>
        </div>
        <div>
          <input type="button" value="Previous">
          <input type="button" onclick="drawPhotomaton()" value="Next">
>>>>>>> 8e79ad663b6d9c5ece236b7194130cb2349e7ed3
        </div>
      </div>

      <div class="row">
        <div class="col-10">
          <select id="algorithm" style="width:100%;" class="form-control" onchange="selectAlgorithm()">
            <option value="0">Photomaton</option>
            <option value="1">Baker</option>
            <option value="2">Couplage</option>
            <option value="3">Fleur</option>
            <option value="4">In X</option>
            <option value="5">Other</option>
          </select>
        </div>
      </div>
      <br>

      <div class="row">
        <div class="col-10" style="text-align:center;">
          <div id="image">
            <canvas id="canvas" width="256" height="256"></canvas>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-5" style="text-align: center;">
          <input type="button" value="Next" class="btn btn-primary" style="width: 200px;" disabled>
        </div>
        <div class="col-5" style="text-align:center;">
          <input type="button" value="Continue" class="btn btn-primary" style="width: 200px;">
        </div>
      </div>
    </div>
  </body>
  <script type="text/javascript">
<<<<<<< HEAD
    var algorithm = document.querySelector("#algorithm").value;

    function draw() {
    var ctx = document.getElementById('canvas').getContext('2d');
    var img = new Image();
    img.onload = function() {
      for (var i = 0; i < 4; i++) {
        for (var j = 0; j < 4; j++) {
          ctx.drawImage(img, j * 50, i * 38, 50, 38);
        }
      }
    };
    img.src = 'https://images.math.cnrs.fr/IMG/png/section8-image.png';
  }
  function selectAlgorithm()
  {
    algorithm = document.querySelector("#algorithm").value;
  }
=======
    var img;
    var canvas;
    var newCanvas;
    const SLEEP_TIME = 50;
    
    function Setup(){
        img = new Image();
        img.src="./image.jpg";
        canvas = document.getElementById('canvas');
        canvas.getContext('2d').drawImage(img, 0, 0)
        newCanvas = document.getElementById('newcanvas');
        newCanvas.getContext('2d').drawImage(img,0,0);
    }
    

    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    function getBase64Image(img) {
        var canvas = document.createElement("canvas");
        canvas.width = img.width;
        canvas.height = img.height;
        var ctx = canvas.getContext("2d");
        ctx.drawImage(img, 0, 0);
        var dataURL = canvas.toDataURL("image/png");

        return dataURL.replace(/^data:image\/(png|jpg);base64,/, "");
    }

    

    async function drawPhotomaton() 
    {
      console.log("click photomaton");
      let width = 256;
      let height = 256;

      do {
        for (let y of Array(height).keys()) {
            for (let x of Array(width).keys()) {

                var ctx = canvas.getContext('2d');
                var newCtx = newCanvas.getContext('2d');
                var pixelData = ctx.getImageData(x, y, 1, 1);

                if (x % 2 == 0 && y % 2 == 0)
                    newCtx.putImageData(pixelData, x / 2, y / 2)
                else if (x % 2 == 0)
                    newCtx.putImageData(pixelData, x / 2, height / 2 + y / 2)
                else if (y % 2 == 0)
                    newCtx.putImageData(pixelData, width / 2 + x / 2, y / 2)
                else
                    newCtx.putImageData(pixelData, width / 2 + x / 2, height / 2 + y / 2)
            }
          }
        canvas.getContext('2d').drawImage(newCanvas, 0, 0);
        console.log(" while : photomaton");
        await sleep(SLEEP_TIME);
    }while (getBase64Image(img) != getBase64Image(newCanvas));
    console.log("end while : photomaton");

    }

   async function drawBoulanger(){
      console.log('click');
      let width = 256;
      let height = 256;
      do{
        for (let y of Array(height).keys()) {
            for (let x of Array(width).keys()) {

                var ctx = canvas.getContext('2d');
                var newCtx = newCanvas.getContext('2d');
                var pixelData = ctx.getImageData(x, y, 1, 1);

                if ((y % 2 == 0) && (x < width / 2)) {
                          newX = 2 * x;
                          newY = y / 2;
                      } else if ((y % 2 != 0) && (x < width / 2)) {
                          newX = 2 * x + 1;
                          newY = (y - 1) / 2;
                      } else if ((y % 2 == 0) && (x >= width / 2)) {
                          newX = 2 * width - 1 - 2 * x;
                          newY = height - 1 - y / 2;
                      } else if ((y % 2 != 0) && (x >= width / 2)) {
                          newX = 2 * width - 2 - 2 * x;
                          newY = height - 1 - (y - 1) / 2;
                      }

                      newCtx.putImageData(pixelData, newX, newY)
            }
          }
          canvas.getContext('2d').drawImage(newCanvas, 0, 0);
          await sleep(SLEEP_TIME);
      }while (getBase64Image(img) != getBase64Image(newCanvas));

    }

    async function inX() 
    {
      console.log("click");
      let width = 256;
      let height = 256;
      do{
      for (let y of Array(height).keys()) {
          for (let x of Array(width).keys()) {

              var ctx = canvas.getContext('2d');
              var newCtx = newCanvas.getContext('2d');
              var pixelData = ctx.getImageData(x, y, 1, 1);
              var newX = x;
              var newY = y;
              
              if(x % 2 == 0){
                newX = x + 2;
              }else{
                newX = x - 2;
              }
              if(y % 2 == 0 ){
                newY=y + 2;
              }else{
                newY= y - 2;
              }
              newCtx.putImageData(pixelData, newX, newY)
              }
        }
      canvas.getContext('2d').drawImage(newCanvas, 0, 0);
      await sleep(5);
      }while (getBase64Image(img) != getBase64Image(newCanvas));
    }

    function couplage() 
    {
      console.log("click");
      drawPhotomaton();
      drawBoulanger();
    }

    function twist() 
    {
      console.log("click");
      let width = 256;
      let height = 256;
      for (let y of Array(height).keys()) {
          for (let x of Array(width).keys()) {

              var ctx = canvas.getContext('2d');
              var newCtx = newCanvas.getContext('2d');
              var pixelData = ctx.getImageData(x, y, 1, 1);
              var newX = x;
              var newY = y;
              
              newX = x+1;
              newY = y+1;

              newCtx.putImageData(pixelData, newX, newY)

              }
        }
      canvas.getContext('2d').drawImage(newCanvas, 0, 0);
    }

    function fleur(){
      console.log("click");
      let width = 256;
      let height = 256;

            for (let y = height; y >= 0; y--) {
                for (let x = width; x >= 0; x--) {

                  var ctx = canvas.getContext('2d');
                  var newCtx = newCanvas.getContext('2d');
                  var pixelData = ctx.getImageData(x, y, 1, 1);

                    var newX = x;
                    var newY = y;
                    let l = width / 2;
                    let h = height / 2;

                    if((x % 2 == 0)&&( y % 2 == 0)){
                      newX = x / 2;
                      newY = y / 2;
                    }else if((x % 2 == 1) && (y % 2 == 0)){
                      newX = (x - 1) / 2 + l;
                      newY = y / 2;

                      let middle = 3 * l / 2;
                      newX += 2 * (middle - newX);
                      if(width / 2 % 2 == 0){
                        newX--;
                      }
                    }else if((x % 2 == 0)&&(y % 2 == 1)){
                      newX = x / 2;
                      newY = (y - 1) / 2 + h;

                      let middle = 3 * h / 2;
                      newY += 2 * (middle - newY);
                      if(height / 2 % 2 == 0){
                        newY--;
                      }
                    }else{
                      newX = (x - 1)/2+l;
                      newY = (y - 1)/2+h;

                      let middle = 3 * l / 2;
                      newX += 2 * (middle - newX);
                      if(width / 2 % 2 == 0){
                        newX--;
                      }
                      middle = 3 * h / 2;
                      newY += 2 * (middle - newY);
                      if(height / 2 % 2 == 0){
                        newY--;
                      }
                    }
                    newCtx.putImageData(pixelData, newX, newY);                 
                }
            }
            canvas.getContext('2d').drawImage(newCanvas, 0, 0);
    }

   

      

>>>>>>> 8e79ad663b6d9c5ece236b7194130cb2349e7ed3
  </script>
  <script type="text/javascript" src="Processing.js"></script>
  <!-- <script type="text/javascript" src="ToolsImages.js"></script> -->
</html>
